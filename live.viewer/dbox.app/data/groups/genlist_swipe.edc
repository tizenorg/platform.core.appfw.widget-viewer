/*
 * Copyright (c) 2011 Samsung Electronics Co., Ltd All Rights Reserved
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

#define SWIPE_TRANSIT       SIN_FAC 0.667 0.8

#define SWIPE_THRESH_X      120
#define SWIPE_THRESH_Y      30

#define SWIPE_OVERLAP_SIZE  216
#define SWIPE_BORDER_SIZE   215

#define SWIPE_COLOR_OTHER   "B041P"
#define SWIPE_COLOR_CALL    "B0232"
#define SWIPE_COLOR_MESSAGE "B0233"

// state: normal(0)->start,right( 1)->rollback,right ( 3), swipe,right ( 2)-> normal(0)
//                 ->start,left (-1)->rollback,right (-3), swipe,right (-2)->
#define GENLIST_SWIPE_SCRIPTS \
   script { \
      public _state; \
      public x1, y1; \
      public cleanup() { \
         set_int(_state, 0); \
         set_int(x1, 0); \
         set_int(y1, 0); \
         set_drag(PART:"drag_part", 0, 0); \
         set_state(PART:"drag_part", "default", 0.0); \
         set_state(PART:"drag_part_left", "default", 0.0); \
         set_state(PART:"drag_part_right", "default", 0.0); \
         set_state(PART:"elm.text.swipe.left", "default", 0.0); \
         set_state(PART:"elm.text.swipe.right", "default", 0.0); \
         set_state(PART:"elm.image.swipe.left", "default", 0.0); \
         set_state(PART:"elm.image.swipe.right", "default", 0.0); \
         set_state(PART:"swipe_temp_disabler", "default", 0.0); \
      } \
   }

#define GENLIST_SWIPE_IMAGES \
      image : "00_icon_call.png" COMP; \
      image : "00_icon_message.png" COMP; \
      image : "00_list_swipe_right.#.png" COMP; \
      image : "00_list_swipe_left.#.png" COMP;

#define GENLIST_SWIPE_PARTS \
      part { name: "drag_part"; \
         type: RECT; \
         scale: 1; \
         repeat_events: 1; \
         dragable { \
            x: 1 1 0; \
            y: 0 0 0; \
         } \
         description { state: "default" 0.0; \
            color: 0 0 0 0; \
            rel1.offset: -SWIPE_OVERLAP_SIZE 0; \
            rel2.offset: SWIPE_OVERLAP_SIZE 0; \
         } \
         description { state: "disable" 0.0; \
            inherit: "default" 0.0; \
            visible: 0; \
         } \
         description { state: "start_right" 0.0; \
            inherit: "default" 0.0; \
            color: 255 255 255 255; \
            color_class: SWIPE_COLOR_OTHER; \
         } \
         description { state: "right_end" 0.0; \
            inherit: "start_right"; \
            rel1.relative: 1 0; \
         } \
         description { state: "right_rollback" 0.0; \
            inherit: "start_right" 0.0; \
            rel1.relative: -1 0; \
            color: 0 0 0 0; \
         } \
         description { state: "start_left" 0.0; \
            inherit: "default" 0.0; \
            color: 255 255 255 255; \
            color_class: SWIPE_COLOR_OTHER; \
         } \
         description { state: "left_end" 0.0; \
            inherit: "start_left" 0.0; \
            rel2.relative: 0 1; \
         } \
         description { state: "left_rollback" 0.0; \
            inherit: "start_left" 0.0; \
            rel2.relative: 2 1; \
            color: 0 0 0 0; \
         } \
      } \
      part { name: "drag_part_left"; \
         type: IMAGE; \
         scale: 1; \
         mouse_events: 0; \
         description { state: "default" 0.0; \
            color: 0 0 0 0; \
            rel1 { \
               relative: -999 0; \
            } \
            rel2 { \
               to_x: "drag_part"; \
               relative: 0 1; \
               offset: SWIPE_OVERLAP_SIZE 0; \
            } \
            image { \
               normal: "00_list_swipe_left.#.png"; \
               border: 0 SWIPE_BORDER_SIZE 53 53; \
               border_scale: 1; \
            } \
         } \
         description { state: "start_right" 0.0; \
            inherit: "default"; \
            color: 255 255 255 255; \
            color_class: SWIPE_COLOR_CALL; \
         } \
         description { state: "start_left" 0.0; \
            inherit: "default"; \
            color: 255 255 255 255; \
            color_class: SWIPE_COLOR_CALL; \
         } \
      } \
      part { name: "drag_part_right"; \
         type: IMAGE; \
         scale: 1; \
         mouse_events: 0; \
         description { state: "default" 0.0; \
            color: 0 0 0 0; \
            rel1 { \
               to_x: "drag_part"; \
               relative: 1 0; \
               offset: -SWIPE_OVERLAP_SIZE 0; \
            } \
            rel2 { \
               relative: 999 1; \
            } \
            image { \
               normal: "00_list_swipe_right.#.png"; \
               border: SWIPE_BORDER_SIZE 0 53 53; \
               border_scale: 1; \
            } \
         } \
         description { state: "start_right" 0.0; \
            inherit: "default"; \
            color: 255 255 255 255; \
            color_class: SWIPE_COLOR_MESSAGE; \
         } \
         description { state: "start_left" 0.0; \
            inherit: "default"; \
            color: 255 255 255 255; \
            color_class: SWIPE_COLOR_MESSAGE; \
         } \
      } \
      part { name: "swipe_temp_disabler"; \
         type: RECT; \
         scale:1; \
         repeat_events: 0; \
         description { state: "default" 0.0; \
            visible: 0; \
            color: 0 0 0 0; \
         } \
         description { state: "enable" 0.0; \
            inherit: "default"; \
            visible: 1; \
         } \
      } \
      part { name: "elm.image.swipe.left"; \
         type: IMAGE; \
         scale: 1; \
         mouse_events: 0; \
         description { state: "default" 0.0; \
            visible: 0; \
            color_class: "F011L1P"; \
            image.normal: "00_icon_message.png"; \
            rel1 { \
               to_x: "elm.padding.left"; \
               relative: 1 0; \
            } \
            rel2 { \
               to_x: "elm.padding.right"; \
               relative: 1 1; \
            } \
            align: 0 0.5; \
            fixed: 1 1; \
            min: 81 81; \
            max: 81 81; \
         } \
         description { state: "start_left" 0.0; \
            inherit: "default" 0.0; \
            visible: 1; \
            color: 255 255 255 255; \
         } \
         description { state: "start_right" 0.0; \
            inherit: "default" 0.0; \
         } \
         description { state: "right_rollback" 0.0; \
            inherit: "default" 0.0; \
            color: 0 0 0 0; \
         } \
         description { state: "left_rollback" 0.0; \
            inherit: "default" 0.0; \
            color: 0 0 0 0; \
         } \
      } \
      part { name: "elm.image.swipe.right"; \
         type: IMAGE; \
         scale: 1; \
         mouse_events: 0; \
         description { state: "default" 0.0; \
            image.normal: "00_icon_call.png"; \
            color_class: "F011L1P"; \
            visible: 0; \
            rel1 { \
               to_x: "elm.padding.right"; \
               relative: 0 0; \
            } \
            rel2 { \
               to_x: "elm.padding.right"; \
               relative: 0 1; \
            } \
            align: 1 0.5; \
            fixed: 1 1; \
            min: 81 81; \
            max: 81 81; \
         } \
         description { state: "start_right" 0.0; \
            inherit: "default" 0.0; \
            visible: 1; \
            color: 255 255 255 255; \
         } \
         description { state: "start_left" 0.0; \
            inherit: "default" 0.0; \
         } \
         description { state: "right_rollback" 0.0; \
            inherit: "default" 0.0; \
            color: 0 0 0 0; \
         } \
         description { state: "left_rollback" 0.0; \
            inherit: "default" 0.0; \
            color: 0 0 0 0; \
         } \
      } \
      part { name: "elm.text.swipe.left"; \
         type: TEXT; \
         scale: 1; \
         mouse_events: 0; \
         description { state: "default" 0.0; \
            rel1 { \
               relative: 1 0; \
               to_x: "elm.image.swipe.left"; \
            } \
            visible: 0; \
         } \
         description { state: "start_left" 0.0; \
            inherit: "default"; \
            visible: 1; \
            align: 0.5 0.5; \
            color_class: "T023"; \
            text { \
               align: 0.5 0.5; \
               min: 0 1; \
               font: "Tizen:style=Regular"; \
               size: 44; \
               text_class: "T023"; \
            } \
         } \
         description { state: "start_right" 0.0; \
            inherit: "default" 0.0; \
         } \
      } \
      part { name: "elm.text.swipe.right"; \
         type: TEXT; \
         scale: 1; \
         mouse_events: 0; \
         description { state: "default" 0.0; \
            rel2 { \
               relative: 0 1; \
               to_x: "elm.image.swipe.right"; \
            } \
            visible: 0; \
         } \
         description { state: "start_right" 0.0; \
            inherit: "default" 0.0; \
            visible: 1; \
            align: 0.5 0.5; \
            color_class: "T023"; \
            text { \
               align: 0.5 0.5; \
               min: 0 1; \
               font: "Tizen:style=Regular"; \
               size: 44; \
               text_class: "T023"; \
               text: "Call"; \
            } \
         } \
         description { state: "start_left" 0.0; \
            inherit: "default" 0.0; \
         } \
      }

#define GENLIST_SWIPE_PROGRAMS \
   program { name: "drag_up"; \
      signal: "mouse,up,1"; \
      source: "drag_part"; \
      script { \
         new x, y, w, h, ww, hh; \
         get_geometry(PART:"base", x, y, ww, hh); \
         get_geometry(PART:"drag_part", x, y, w, h); \
         x = x + SWIPE_OVERLAP_SIZE; \
         if (get_int(_state) == 1) { \
            if (x >= (ww/2)) { \
               set_int(_state, 3); \
               set_state(PART:"swipe_temp_disabler", "enable", 0.0); \
               run_program(PROGRAM:"end_move_right"); \
            } else { \
               set_int(_state, 2); \
               set_state(PART:"swipe_temp_disabler", "enable", 0.0); \
               set_state(PART:"elm.text.swipe.right", "default", 0.0); \
               set_state(PART:"elm.text.swipe.left", "default", 0.0); \
               run_program(PROGRAM:"end_rollback_right"); \
            } \
         } else if (get_int(_state) == -1) { \
            if (-x >= (ww/2)) { \
               set_int(_state, -3); \
               set_state(PART:"swipe_temp_disabler", "enable", 0.0); \
               run_program(PROGRAM:"end_move_left"); \
            } else { \
               set_int(_state, -2); \
               set_state(PART:"swipe_temp_disabler", "enable", 0.0); \
               set_state(PART:"elm.text.swipe.right", "default", 0.0); \
               set_state(PART:"elm.text.swipe.left", "default", 0.0); \
               run_program(PROGRAM:"end_rollback_left"); \
            } \
         } else cleanup(); \
      } \
   } \
   program { name: "drag_down"; \
      signal: "mouse,down,1"; \
      source: "drag_part"; \
      script { \
         new x, y; \
         get_mouse(x, y); \
         set_int(_state, 0); \
         set_int(x1, x); \
         set_int(y1, y); \
      } \
   } \
   program { name: "drag"; \
      signal: "drag"; \
      source: "drag_part"; \
      script { \
         new x2, y2; \
         get_mouse(x2, y2); \
         if (((y2 - get_int(y1)) >= SWIPE_THRESH_Y) || \
             ((y2 - get_int(y1)) <= -SWIPE_THRESH_Y)) \
               return; \
         if (get_int(_state) == 0) { \
            if ((x2 - get_int(x1)) >= SWIPE_THRESH_X) { \
               emit("elm,swipe,start", ""); \
               set_int(_state, 1); \
               run_program(PROGRAM:"start_right");  \
            } else if ((x2 - get_int(x1)) <= -SWIPE_THRESH_X) { \
               emit("elm,swipe,start", ""); \
               set_int(_state, -1); \
               run_program(PROGRAM:"start_left");  \
            } \
         } else if (get_int(_state) == -1) { \
            if (x2 > get_int(x1)) { \
               set_int(_state, 1); \
               run_program(PROGRAM:"start_right");  \
            }\
         } else if (get_int(_state) == 1) { \
            if (x2 < get_int(x1)) { \
               set_int(_state, -1); \
               run_program(PROGRAM:"start_left");  \
            } \
         } \
      } \
   } \
   program { name: "start_right"; \
      action:  STATE_SET "start_right" 0.0; \
      target: "elm.image.swipe.right"; \
      target: "elm.image.swipe.left"; \
      target: "elm.text.swipe.right"; \
      target: "elm.text.swipe.left"; \
      target: "drag_part"; \
      target: "drag_part_left"; \
      target: "drag_part_right"; \
   } \
   program { name: "start_left"; \
      action:  STATE_SET "start_left" 0.0; \
      target: "elm.image.swipe.right"; \
      target: "elm.image.swipe.left"; \
      target: "elm.text.swipe.right"; \
      target: "elm.text.swipe.left"; \
      target: "drag_part"; \
      target: "drag_part_left"; \
      target: "drag_part_right"; \
   } \
   program { name: "end_move_right"; \
      transition: SWIPE_TRANSIT; \
      action:  STATE_SET "right_end" 0.0; \
      target: "drag_part"; \
      after: "right_ender"; \
   } \
   program { name: "end_move_left"; \
      transition: SWIPE_TRANSIT; \
      action:  STATE_SET "left_end" 0.0; \
      target: "drag_part"; \
      after: "left_ender"; \
   } \
   program { name: "end_rollback_right"; \
      transition: SWIPE_TRANSIT; \
      action:  STATE_SET "right_rollback" 0.0; \
      target: "elm.image.swipe.right"; \
      target: "elm.image.swipe.left"; \
      target: "drag_part"; \
      after: "rollback_ender"; \
   } \
   program { name: "end_rollback_left"; \
      transition: SWIPE_TRANSIT; \
      action:  STATE_SET "left_rollback" 0.0; \
      target: "elm.image.swipe.right"; \
      target: "elm.image.swipe.left"; \
      target: "drag_part"; \
      after: "rollback_ender"; \
   } \
   program { name: "right_ender"; \
      script { \
         emit("elm,swipe,stop,right", ""); \
         cleanup(); \
      } \
   } \
   program { name: "left_ender"; \
      script { \
         emit("elm,swipe,stop,left", ""); \
         cleanup(); \
      } \
   } \
   program { name: "rollback_ender"; \
      source: ""; \
      script { \
         emit("elm,swipe,stop", ""); \
         cleanup(); \
      } \
   } \
   program { name: "swipe_revert"; \
      signal: "elm,swipe,revert"; \
      source: ""; \
      script { \
         if (get_int(_state) != 0) { \
            emit("elm,swipe,stop", ""); \
         }\
         cleanup(); \
      } \
   } \
   program { name: "swipe_disable"; \
      signal: "elm,swipe,disabled"; \
      source: ""; \
      script { \
         if (get_int(_state) != 0) { \
            emit("elm,swipe,stop", ""); \
            cleanup(); \
         }\
         set_state(PART:"drag_part", "disable", 0.0); \
      } \
   } \
   program { name: "swipe_enable"; \
      signal: "elm,swipe,enabled"; \
      source: ""; \
      script { \
         if (get_int(_state) != 0) { \
            emit("elm,swipe,stop", ""); \
            cleanup(); \
         }\
         set_state(PART:"drag_part", "default", 0.0); \
      } \
   } \
   program { name: "swipe_default"; \
      signal: "elm,state,default"; \
      source: "elm"; \
      script { \
         run_program(PROGRAM:"swipe_enable"); \
      } \
   } \
   program { name: "swipe_disable_state"; \
      signal: "elm,state,disabled"; \
      source: "elm"; \
      script { \
         run_program(PROGRAM:"swipe_disable"); \
      } \
   } \

group { GENLIST_NAME("1text/swipe/default")
   GENLIST_PROLOG_NORMAL
   images {
      image : "00_focus.png" COMP;
   }
   GENLIST_SWIPE_SCRIPTS
   GENLIST_SWIPE_IMAGES

   data.item: "texts" "elm.text elm.text.swipe.left elm.text.swipe.right";
   data.item: "contents" "elm.icon";
   data.item: "bg" "bg";

   parts {
      GENLIST_PART_BASE
      GENLIST_PART_BG_NORMAL
      GENLIST_PART_BOTTOM_LINE
      GENLIST_PART_PADDING_LEFT
      GENLIST_PART_PADDING_RIGHT
      GENLIST_PART_PADDING_TOP
      GENLIST_PART_PADDING_BOTTOM

      GENLIST_PART_LISTITEM_("elm.text", GENLIST_HEIGHT_1LINE,
         "elm.icon", "elm.padding.right",
         "elm.padding.top", "elm.padding.bottom",
      )
      GENLIST_PART_ICON_MEDIUM_L("elm.icon", "elm.padding.left")
      GENLIST_PART_FLIP
      GENLIST_PART_FOCUS_NORMAL
      GENLIST_SWIPE_PARTS
   }
   GENLIST_PROGRAMS_NORMAL( target: "elm.text"; )
   GENLIST_SWIPE_PROGRAMS
}
