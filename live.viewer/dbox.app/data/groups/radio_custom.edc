/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * PROPRIETARY/CONFIDENTIAL
 *
 * This software is the confidential and proprietary information of SAMSUNG
 * ELECTRONICS ("Confidential Information"). You agree and acknowledge that this
 * software is owned by Samsung and you shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the license
 * agreement you entered into with SAMSUNG ELECTRONICS. SAMSUNG make no
 * representations or warranties about the suitability of the software, either
 * express or implied, including but not limited to the implied warranties of
 * merchantability, fitness for a particular purpose, or non-infringement.
 * SAMSUNG shall not be liable for any damages suffered by licensee arising out
 * of or releated to this software.
 *
 */

#define RADIO_STATE_DEFAULT 0
#define RADIO_STATE_VISIBLE 1
#define RADIO_STATE_DISABLED_VISIBLE 2
#define RADIO_STATE_DISABLED 3

group {
   name: "elm/radio/base/water";
   images {
      image: "radio_bg.png" COMP;
      image: "change_bg.png" COMP;
      image: "radio_bg_in.png" COMP;
   }
   parts {
      part {
         name: "radio_bg";
         type: RECT;
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
         }
      }
      part {
         name: "water_effect";
         type: IMAGE;
         scale: 1;
         clip_to: "clipper";
         description {
            state: "default" 0.0;
            align: 0.0 0.75;
            max: 36 4;
            rel1.to: "bg_image";
            rel2.to: "bg_image";
            image.normal: "change_bg.png";
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            align: 1.0 0.25;
         }
      }
      part {
         name: "radio";
         clip_to: "sequence_clip";
         scale: 1;
         mouse_events: 1;
         description {
            state: "default" 0.0;
            rel1.to: "bg_image";
            rel2.to: "bg_image";
            image.normal: "radio_bg_in.png";
         }
      }
      part {
         name: "radio_choose";
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0.5 0.5;
            visible: 0;
            rel1.to: "bg_image";
            rel2.to: "bg_image";
            image.normal: "radio_bg_in.png";
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part {
         name: "bg_image";
         scale: 1;
         description {
            state: "default" 0.0;
            align: 0.0 0.5;
            min: 64 64;
            max: 64 64;
            rel1.to: "radio_bg";
            rel2.to: "radio_bg";
            image.normal: "radio_bg.png";
         }
      }
      part {
         name: "sequence_clip";
         type: RECT;
         description {
            state: "default" 0.0;
            rel1 {
               to_y: "water_effect";
               relative: 0.0 1.0;
            }
            rel2.to: "bg_image";
         }
      }
      part {
         name: "clipper";
         type: RECT;
         scale: 1;
         mouse_events: 1;
         description {
            state: "default" 0.0;
            min: 24 24;
            max: 24 24;
            rel1.to: "radio";
            rel2.to: "radio";
         }
      }
      part {
         name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description {
            state: "default" 0.0;
            fixed: 1 0;
            visible: 0;
            align: 1.0 0.5;
            rel1 {
               to_x: "bg_image";
               relative: 1.0 0.0;
            }
            rel2.to_x: "bg_image";
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0;
            min: 64 64;
         }
         description {
            state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 128;
         }
         description {
            state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 128;
            visible: 1;
            aspect: 1.0 1.0;
         }
      }
      part {
         name: "elm.text";
         type: TEXT;
         scale: 1;
         description {
            state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            rel1 {
               to_x: "elm.swallow.content";
               relative: 1.0 0.0;
            }
            color: 0 0 0 255;
            text {
               text: "Radio";
               font: "Tizen:style=Regular";
               size: 24;
               min: 1 1;
               align: 1.0 0.5;
               text_class: "tizen";
            }
         }
         description {
            state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
         description {
            state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 128;
            color3: 0 0 0 0;
         }
         description {
            state: "disabled_visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 128;
            color3: 0 0 0 0;
            visible: 1;
            text.min: 1 1;
         }
      }
      part {
         name: "disabler";
         type: RECT;
         ignore_flags: ON_HOLD;
         description {
            state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description {
            state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program {
         name: "click";
         signal: "mouse,clicked,1";
         source: "*";
         action: SIGNAL_EMIT "elm,action,radio,toggle" "";
      }
      program {
         name: "begin";
         signal: "elm,state,radio,begin";
         source: "";
         action: ACTION_STOP;
         target: "radio_on";
         after: "full_without_action";
      }
      program {
         name: "full_without_action";
         action: STATE_SET "visible" 0.0;
         target: "radio_choose";
      }
      program {
         name: "end";
         signal: "elm,state,radio,off";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "radio_choose";
         after: "radio_off";
      }
      program {
         name: "radio_on";
         signal: "elm,state,radio,on";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "water_effect";
         transition: LINEAR 0.9;
      }
      program {
         name: "radio_off";
         action: STATE_SET "default" 0.0;
         target: "water_effect";
         transition: LINEAR 0.9;
      }
      program {
         name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.text";
      }
      program {
         name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program {
         name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.content";
      }
      program {
         name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program {
         name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "disabler";
         after: "disable_text";
      }
      program {
         name: "disable_text";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "visible"))
            {
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
            else set_state(PART:"elm.text", "disabled", 0.0);

            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
            {
               set_state(PART:"elm.swallow.content", "disabled_visible", 0.0);
            }
            else set_state(PART:"elm.swallow.content", "disabled", 0.0);
         }
      }
      program {
         name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disabler";
         after: "enable_text";
      }
      program {
         name: "enable_text";
            script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.text", st, 30, vl);
            if (!strcmp(st, "disabled_visible"))
            {
               set_state(PART:"elm.text", "visible", 0.0);
            }
            else set_state(PART:"elm.text", "default", 0.0);

            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
            {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            }
            else set_state(PART:"elm.swallow.content", "default", 0.0);
         }
      }
   }
}

#undef RADIO_STATE_DEFAULT
#undef RADIO_STATE_VISIBLE
#undef RADIO_STATE_DISABLED_VISIBLE
#undef RADIO_STATE_DISABLED
