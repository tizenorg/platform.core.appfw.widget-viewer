/*
 * Copyright (c) 2013 Samsung Electronics Co., Ltd All Rights Reserved
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

#define BASE_DESCRIPTION(image_name) \
   description { state: "default" 0.0; \
      min: 375 34; \
      max: 99999 34; \
      rel1 { \
         to: "bg"; \
         offset: 1 0; \
      } \
      rel2 { \
         to: "bg"; \
         offset: -5 -1; \
      } \
      image.normal: image_name; \
      image.border: 17 17 17 17; \
      image.border_scale: 1; \
   }

group { name: "elm/slider/horizontal/bubble";
   images {
      image: "slider_grey_dots.png" COMP;
      image: "slider_blue_dots.png" COMP;
   }
   parts {
      part { name: "base";
          mouse_events: 0;
          clip_to: "level";
          scale: 1;
          BASE_DESCRIPTION("slider_grey_dots.png");
      }
      part { name: "base_bg";
          mouse_events: 0;
          scale: 1;
          BASE_DESCRIPTION("slider_grey_dots.png");
      }
      part { name: "level.image";
          clip_to: "clipper.image";
          mouse_events: 0;
          scale: 1;
          BASE_DESCRIPTION("slider_blue_dots.png");
      }
      part { name: "clipper.image";
          type: RECT;
          mouse_events: 0;
          scale: 1;
          description { state: "default" 0.0;
             fixed: 1 1;
             rel1 {
                to_x: "bar_image_left_padding";
                to_y: "base";
                relative: 1.0 0.0;
             }
             rel2 {
                to_y: "base";
                to_x: "elm.dragable.slider";
                offset: -5 -1;
                relative: 0.5 1.0;
             }
           }
         }
         part {
            name: "bar_image_left_padding";
            type: SPACER;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 0;
               rel1.to: "base";
               rel2 {
                  relative: 0.0 1.0;
                  to: "base";
               }
               align: 0.0 0.5;
            }
         }
         part {
            name: "bar_image_right_padding";
            type: SPACER;
            scale: 1;
            description {
               state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 0;
               rel1 {
                  relative: 1.0 0.0;
                  to: "base";
               }
               rel2.to: "base";
               align: 1.0 0.5;
            }
         }
         part { name: "level";
            clip_to: "clipper";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1 {
                  to_x: "bar_image_left_padding";
                  to_y: "base";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_y: "base";
                  to_x: "elm.dragable.slider";
                  offset: -5 -1;
                  relative: 0.5 1.0;
               }
            }
            description { state: "inverted" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "level2";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            clip_to: "clipper";
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "inverted" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "bg";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               rel1.to: "elm.swallow.bar";
               rel2{
                  to: "elm.swallow.bar";
                  offset: 0 0;
               }
               color: 0 0 0 0;
            }
         }
         part { name: "elm.swallow.bar";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               min: 72 74;
               max: 99999 74;
               align: 1.0 0.5;
               rel1 {
                  to_x: "bar_left_padding";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "bar_right_padding";
                  relative: 0.0 1.0;
               }
            }
         }
         part {
            name: "bar_left_padding";
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               min: 10 0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 0.5;
                  to_x: "elm.text";
               }
               rel2 {
                  relative: 1.0 0.5;
                  to_x: "elm.text";
               }
               align: 0.0 0.5;
            }
         }
         part {
            name: "bar_right_padding";
            type: SWALLOW;
            scale: 1;
            description {
               state: "default" 0.0;
               visible: 0;
               min: 10 0;
               fixed: 1 1;
               rel1 {
                  relative: 0.0 0.5;
                  to_x: "elm.units";
               }
               rel2 {
                  relative: 0.0 0.5;
                  to_x: "elm.units";
               }
               align: 1.0 0.5;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1.to_y: "elm.swallow.bar";
               rel2 {
                  relative: 0.0 1.0;
                  to_y: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "elm.text";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 0.0 0.5;
               rel1{
                  to_x: "elm.swallow.icon";
                  relative: 1.0 0.0;
                  offset: -1 4;
               }
               rel2{
                  to_x: "elm.swallow.icon";
                  relative: 1.0 1.0;
                  offset: -1 -5;
               }
               color: 0 0 0 255;
               text {
                  font: "Tizen:style=Medium";
                  size: 30;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               text.min: 1 1;
               rel1.offset: 0 4;
               rel2.offset: 0 -5;
            }
         }
         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 1.0 0.5;
               rel1 {
                  relative: 1.0 0.0;
                  to_y: "elm.swallow.bar";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to_y: "elm.swallow.bar";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               aspect: 1.0 1.0;
               aspect_preference: VERTICAL;
            }
         }
         part { name: "units";
            mouse_events: 0;
            scale: 1;
            type: RECT;
            description { state: "default" 0.0;
               visible: 0;
               rel1 {
                  to_x: "elm.units";
                  offset: 0 5;
               }
               color: 0 0 0 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.units";
            type: TEXT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               align: 1.0 0.5;
               rel1{
                  relative: 0.0 0.0;
                  offset: 0 8;
                  to_x: "elm.swallow.end";
               }
               rel2{
                  relative: 0.0 1.0;
                  offset: 0 -9;
                  to_x: "elm.swallow.end";
               }
               color: 0 0 0 25;
               text {
                  font: "Tizen:style=Bold";
                  size: 30;
                  min: 0 0;
                  align: 0.0 0.5;
                  text_class: "tizen";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               fixed: 1 1;
               visible: 1;
               text.min: 1 1;
               rel1.offset: -5 0;
               rel2.offset: -5 -1;
            }
         }
         part { name: "elm.dragable.slider";
            type: RECT;
            mouse_events: 1;
            scale: 1;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "bg";
            }
            description { state: "default" 0.0;
               min: 0 0;
               max: 0 0;
               fixed: 1 1;
               rel1 {
                  relative: 0.5 0.0;
                  to_x: "bg";
               }
               rel2 {
                  relative: 0.5 1.0;
                  to_x: "bg";
               }
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            mouse_events: 1;
            repeat_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               min: 1 1;
               color: 0 0 0 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "clipper";
            type: RECT;
            description { state: "default" 0.0;
               color: 255 255 255 255;
            }
            description { state: "disabled" 0.0;
               color: 255 255 255 102;
            }
         }
      }
      programs {
         program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.text";
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.icon";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.icon";
      }
      program { name: "end_show";
         signal: "elm,state,end,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.end";
      }
      program { name: "end_hide";
         signal: "elm,state,end,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.end";
      }
      program { name: "units_show";
         signal: "elm,state,units,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.units";
         target: "units";
      }
      program { name: "units_hide";
         signal: "elm,state,units,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.units";
         target: "units";
      }
      program { name: "slider_disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "disabler";
         target: "clipper";
      }
      program { name: "slider_enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disabler";
         target: "clipper";
      }
   }
}

group { name: "elm/slider/horizontal/bubble_sent";
   inherit: "elm/slider/horizontal/bubble";
   parts {
      part { name: "elm.dragable.slider";
         type: GROUP;
         source: "elm/slider/horizontal/indicator/bubble_sent";
         mouse_events: 1;
         scale: 1;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "bg";
         }
         description { state: "default" 0.0;
            min: 0 120;
            max: 0 120;
            fixed: 1 1;
            rel1 {
               relative: 0.5 0.0;
               to_x: "bg";
            }
            rel2 {
               relative: 0.5 1.0;
               to_x: "bg";
            }
            color: 0 0 0 0;
         }
      }
   }
}

group { name: "elm/slider/horizontal/indicator/bubble_sent";
   images {
      image: "indicator_bubble.png" COMP;
   }
   parts {
      part { name: "button_events";
         type: RECT;
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 0 120;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "button0";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 20 20;
            max: 20 20;
            rel1 {
               to: "elm.indicator";
               offset: -10 0;
            }
            rel2.to: "elm.indicator";
            image {
               normal: "indicator_bubble.png";
               border: 3 3 3 3;
               border_scale: 1;
            }
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            image.normal: "indicator_bubble.png";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            image.normal: "indicator_bubble.png";
         }
      }
      part { name: "elm.indicator";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 1;
            color: 59 115 182 255;
            text {
               font: "Tizen:style=Medium";
               size: 40;
               min: 1 1;
               align: 0.5 0.5;
               text_class: "tizen";
            }
         }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
          }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
         }
      }
   }
   programs {
      program { name: "set_val_show";
         signal: "elm,state,val,show";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.indicator";
      }
      program { name: "set_val_hide";
         signal: "elm,state,val,hide";
         source: "elm";
         action: STATE_SET "hide" 0.0;
         target: "elm.indicator";
      }
      program { name: "slider_disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "button0";
         target: "button_events";
      }
      program { name: "slider_enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "button0";
         target: "button_events";
      }
      program { name: "mouse_down";
         signal: "mouse,down,*";
         source: "button_events";
         action: STATE_SET "pressed" 0.0;
         target: "button0";
         after: "text_pressed";
      }
      program { name: "mouse_up";
         signal: "mouse,up,*";
         source: "button_events";
         action: STATE_SET "default" 0.0;
         target: "button0";
         after: "text_unpressed";
      }
      program { name: "text_pressed";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.indicator", st, 30, vl);
            if (!strcmp(st, "default"))
              set_state(PART:"elm.indicator", "pressed", 0.0);
         }
      }
      program { name: "text_unpressed";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.indicator", st, 30, vl);
            if (!strcmp(st, "pressed"))
              set_state(PART:"elm.indicator", "default", 0.0);
         }
      }
   }
}

group { name: "elm/slider/horizontal/indicator/wave";
   images {
      image: "slider_blue_arc_72x72.png" COMP;
      image: "slider_green_arc_72x72.png" COMP;
   }
   parts {
      part { name: "button_events";
         type: RECT;
         mouse_events: 1;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 2*72 1.5*72;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "button0";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 72 72;
            max: 72 36;
            rel1.to: "elm.indicator";
            rel2.to: "elm.indicator";
            image {
               normal: "slider_blue_arc_72x72.png";
               border: 22 22 10 43;
               border_scale: 1;
            }
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            image.normal: "slider_green_arc_72x72.png";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            image.normal: "slider_green_arc_72x72.png";
         }
      }
      part { name: "elm.indicator";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 1;
            color: 0 0 0 0;
            text {
               font: "Tizen:style=Medium";
               size: 40;
               min: 1 1;
               align: 0.5 0.5;
               text_class: "tizen";
            }
         }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
          }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program { name: "set_val_show";
         signal: "elm,state,val,show";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.indicator";
      }
      program { name: "set_val_hide";
         signal: "elm,state,val,hide";
         source: "elm";
         action: STATE_SET "hide" 0.0;
         target: "elm.indicator";
      }
      program { name: "slider_disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "button0";
         target: "button_events";
      }
      program { name: "slider_enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "button0";
         target: "button_events";
      }
      program { name: "mouse_down";
         signal: "mouse,down,*";
         source: "button_events";
         action: STATE_SET "pressed" 0.0;
         target: "button0";
         after: "text_pressed";
      }
      program { name: "mouse_up";
         signal: "mouse,up,*";
         source: "button_events";
         action: STATE_SET "default" 0.0;
         target: "button0";
         after: "text_unpressed";
      }
      program { name: "text_pressed";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.indicator", st, 30, vl);
            if (!strcmp(st, "default"))
              set_state(PART:"elm.indicator", "pressed", 0.0);
         }
      }
      program { name: "text_unpressed";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.indicator", st, 30, vl);
            if (!strcmp(st, "pressed"))
              set_state(PART:"elm.indicator", "default", 0.0);
         }
      }
   }
}

group { name: "elm/slider/horizontal/wave";
   images {
      image: "slider_arc__line_blue.png" COMP;
      image: "slider_arc__line_green.png" COMP;
   }
   script {
      public invert_on = 0;
      public set_invert_on() {
         set_state(PART:"level", "inverted", 0.0);
         set_state(PART:"level2", "inverted", 0.0);
         set_state(PART:"level_right", "inverted", 0.0);
         set_state(PART:"level2_right", "inverted", 0.0);
         set_int(invert_on, 1);
      }
      public set_invert_off() {
         set_state(PART:"level", "default", 0.0);
         set_state(PART:"level2", "default", 0.0);
         set_state(PART:"level_right", "default", 0.0);
         set_state(PART:"level2_right", "default", 0.0);
         set_int(invert_on, 0);
      }
      public thumb_down() {
         if(get_int(invert_on) == 0) {
            set_state(PART:"level", "pressed", 0.0);
            set_state(PART:"level_right", "pressed", 0.0);
         }
         else if(get_int(invert_on) == 1) {
            set_state(PART:"level2", "pressed", 0.0);
            set_state(PART:"level2_right", "pressed", 0.0);
         }
      }
      public thumb_up() {
         if(get_int(invert_on) == 0) {
            set_state(PART:"level", "default", 0.0);
            set_state(PART:"level_right", "default", 0.0);
         }
         else if(get_int(invert_on) == 1) {
            set_state(PART:"level2", "inverted", 0.0);
            set_state(PART:"level2_right", "inverted", 0.0);
         }
      }
   }
   parts {
      part { name: "base";
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            min: 438 6;
            max: 99999 6;
            rel1.to: "bg";
            rel2.to: "bg";
            image{
               normal: "slider_arc__line_blue.png";
               border: 1 1 2 2;
               border_scale: 1;
            }
         }
      }
      part {
         name: "bar_image_left_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 0 0;
            max: 0 0;
            fixed: 1 0;
            rel1.to: "base";
            rel2 {
               relative: 0.0 1.0;
               to: "base";
            }
            align: 0.0 0.5;
         }
      }
      part {
         name: "bar_image_right_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 0 0;
            max: 0 0;
            fixed: 1 0;
            rel1 {
               relative: 1.0 0.0;
               to: "base";
            }
            rel2.to: "base";
            align: 1.0 0.5;
         }
      }
      part { name: "level";
         mouse_events: 0;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               to_x: "bar_image_left_padding";
               to_y: "base";
               relative: 1.0 0.0;
            }
            rel2 {
               to_y: "base";
               to_x: "elm.dragable.slider";
               relative: 0.0 1.0;
            }
            image{
               normal: "slider_arc__line_blue.png";
               border: 1 1 2 2;
               border_scale: 1;
            }
         }
         description { state: "inverted" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            image.normal: "slider_arc__line_green.png";
         }
      }
      part { name: "level2";
         mouse_events: 0;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            rel1 {
               to_y: "base";
               to_x: "elm.dragable.slider";
               relative: 0.0 0.0;
            }
            rel2 {
               to_y: "base";
               to_x: "bar_image_left_padding";
               relative: 1.0 1.0;
            }
            image{
               normal: "slider_arc__line_green.png";
               border: 1 1 2 2;
               border_scale: 1;
            }
         }
         description { state: "inverted" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            image.normal: "slider_arc__line_green.png";
            visible: 1;
         }
      }
      part { name: "level_right";
         mouse_events: 0;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               to_y: "base";
               to_x: "elm.dragable.slider";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "bar_image_right_padding";
               to_y: "base";
               relative: 0.0 1.0;
            }
            image {
               normal: "slider_arc__line_blue.png";
               border: 1 1 2 2;
               border_scale: 1;
            }
         }
         description { state: "inverted" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            image.normal: "slider_arc__line_green.png";
         }
      }
      part { name: "level2_right";
         mouse_events: 0;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            rel1 {
               to_y: "base";
               to_x: "bar_image_right_padding";
               relative: 0.0 0.0;
            }
            rel2 {
               to_y: "base";
               to_x: "elm.dragable.slider";
               relative: 1.0 1.0;
            }
            image{
               normal: "slider_arc__line_blue.png";
               border: 1 1 2 2;
               border_scale: 1;
            }
         }
         description { state: "inverted" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            image.normal: "slider_arc__line_green.png";
            visible: 1;
         }
      }
      part { name: "bg";
         type: RECT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "elm.swallow.bar";
            rel2.to: "elm.swallow.bar";
         }
      }
      part { name: "elm.swallow.bar";
         type: SWALLOW;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            min: 72 74;
            max: 99999 74;
            align: 1.0 0.5;
            rel1 {
               to_x: "bar_left_padding";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "bar_right_padding";
               relative: 0.0 1.0;
            }
         }
      }
      part {
         name: "bar_left_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 16 0;
            fixed: 1 1;
            rel1 {
               relative: 1.0 0.5;
               to_x: "elm.text";
            }
            rel2 {
               relative: 1.0 0.5;
               to_x: "elm.text";
            }
            align: 0.0 0.5;
         }
      }
      part {
         name: "bar_right_padding";
         type: SPACER;
         scale: 1;
         description {
            state: "default" 0.0;
            min: 16 0;
            fixed: 1 1;
            rel1 {
               relative: 0.0 0.5;
               to_x: "elm.units";
            }
            rel2 {
               relative: 0.0 0.5;
               to_x: "elm.units";
            }
            align: 1.0 0.5;
         }
      }
      part { name: "elm.swallow.icon";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            align: 0.0 0.5;
            rel1 {
               to_y: "elm.swallow.bar";
            }
            rel2 {
               relative: 0.0 1.0;
               to_y: "elm.swallow.bar";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
      }
      part { name: "elm.text";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1{
               to_x: "elm.swallow.icon";
               relative: 1.0 0.0;
            }
            rel2.to_x: "elm.swallow.icon";
            color: 0 0 0 0;
            text {
               font: "Tizen:style=Medium";
               size: 10;
               min: 0 0;
               align: 0.0 0.5;
               text_class: "tizen";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            text.min: 1 1;
         }
      }
      part { name: "elm.swallow.end";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            align: 1.0 0.5;
            rel1 {
               relative: 1.0 0.0;
               to_y: "elm.swallow.bar";
            }
            rel2 {
               relative: 1.0 1.0;
               to_y: "elm.swallow.bar";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0;
            aspect_preference: VERTICAL;
         }
      }
      part { name: "units";
         mouse_events: 0;
         scale: 1;
         type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            rel1.to_x: "elm.units";
            color: 0 0 0 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.units";
         type: TEXT;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
            align: 1.0 0.5;
            rel1.to_x: "elm.swallow.end";
            rel2{
               relative: 0.0 1.0;
               to_x: "elm.swallow.end";
            }
            color: 0 0 0 0;
            text {
               font: "Tizen:style=Bold";
               size: 10;
               min: 0 0;
               align: 0.0 0.5;
               text_class: "tizen";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 1;
            visible: 1;
            text.min: 1 1;
         }
      }
      part { name: "elm.dragable.slider";
         type: GROUP;
         source: "elm/slider/horizontal/indicator/wave";
         mouse_events: 1;
         scale: 1;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "bg";
         }
         description { state: "default" 0.0;
            min: 72 72;
            fixed: 1 1;
            align: 0.5 0.5;
            color: 0 0 0 0;
         }
      }
      part { name: "disabler";
         type: RECT;
         mouse_events: 1;
         repeat_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "clipper";
         type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            color: 255 255 255 102;
         }
      }
   }
   programs {
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.text";
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.icon";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.icon";
      }
      program { name: "end_show";
         signal: "elm,state,end,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.end";
      }
      program { name: "end_hide";
         signal: "elm,state,end,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.end";
      }
      program { name: "units_show";
         signal: "elm,state,units,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.units";
         target: "units";
      }
      program { name: "units_hide";
         signal: "elm,state,units,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.units";
         target: "units";
      }
      program { name: "invert_on";
         signal: "elm,state,inverted,on";
         source: "elm";
         script {
            set_invert_on();
         }
      }
      program { name: "invert_off";
         signal: "elm,state,inverted,off";
         source: "elm";
         script {
            set_invert_off();
         }
      }
      program { name: "val_show";
         signal: "mouse,down,*";
         source: "elm.dragable.slider";
         script {
            thumb_down();
         }
      }
      program { name: "val_hide";
         signal: "mouse,up,*";
         source: "elm.dragable.slider";
         script {
            thumb_up();
         }
      }
      program { name: "slider_disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "disabler";
         target: "clipper";
      }
      program { name: "slider_enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disabler";
         target: "clipper";
      }
   }
}
